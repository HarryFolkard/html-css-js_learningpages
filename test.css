/*Element Selector: p{ }
Just you specifying an element name.*/
h2 {
    color: aquamarine;
    text-align: center;
}

/*Class Selector: .hello{ }
This is where you have specified a class in html (Class can apply to multiple elements in a page).
E.g. 
    <p class="hello">...</p> 
    <div class="hello">...</div> 
Here both the p and div tags have class="hello", 
so BOTH of these will get affected by whatever we say in CSS
*/
.hello {
    color: aquamarine;
}

/*ID Selector: #name{ }
This is where you have specified an id in html (ID can apply to at most one element in a page).
E.g.
    <div id="name">...</div>
Just the div is affected.
*/
#name {
    color: aquamarine;
}

/*Group Selectors:*/

/*FIRST: div, .hello{ }
Allows us to affect both types.*/
div, .hello {
    color: aquamarine;
}

/*SECOND: p.hello{ }
Targets every p element that has the attribute hello*/
p.hello{
    color: blue;
}

/*THIRD: article > p{ }
Targets only p's directly inside articles, that is:
<article> <p>...</p> </article>
Notice this must be a direct child, so,
<article> <div> <p>...</p> </div> </article> is not affected since its not a direct child.*/

/*Fourth: article p{ }
Targets only p's inside articles, that is:
<article> <p>...</p> </article> AND <article> <div> <p>...</p> </div> </article>.*/

/*Fourth: .hello p{ }
Targets only p's inside elements with class="hello", that is:
<article class="hello"> <p>...</p> </article> AND <article> <div> <p>...</p> </div> </article>.*/

/*Pseudo Class Selectors: THE NAV BAR CODE
:link
:visted
:hover
:active
:nth-child()
*/
header li {
    list-style: none;
}
header a:link, header a:visited {
    text-decoration: none;
    background-color: green;
    border: 1px solid blue;
    color: black;
    display: block;
    width: 200px;
    text-align: center;
    margin-bottom: 1px;
}
header a:hover, header a:active {
    background-color: red;
    color: purple;
}
header li:nth-child(3) {
    font-size: 24px;
}
ol li:nth-child(odd) {
    background-color: grey;
}

/*The Box:*/
#box {
    background-color: blue;
    padding: 10px 10px 10px 10px;
    border: 5px solid black;
    margin: 50px;
}
#box2 {
    background-color: blue;
    padding: 10px 10px 10px 10px;
    border: 5px solid black;
    margin: 50px;
    width: 300px;
    box-sizing: border-box;
}
/*Using 'border-box" ensures our whole box fits to 300px, not just that the content fits 300px wide!!
It is useful to always use box-sizing: border-box; 
Hhence we should use the * selector to ensure CSS properties always apply*/

/*Margins
Margins in neighbouring boxes are cumulative. 
BUT when boxes are on top of one another they aren't cumulative and the larger margin is used instead.*/
#box3 {
    background-color: blue;
    padding: 10px 10px 10px 10px;
    border: 5px solid black;
    margin: 50px;
    width: 500px;
    box-sizing: border-box;
}

/*Overflow
To make a scroll box
*/
#box4 {
    background-color: blue;
    padding: 10px 10px 10px 10px;
    border: 5px solid black;
    margin: 50px;
    width: 500px;
    height: 80px;
    box-sizing: border-box;
    overflow: auto;
}

/*Float
Here we are making three boxes and we will float them*/
#p1 {
    width: 50px;
    height: 50px;
    border: 1px solid black;
    background-color: rgb(188, 161, 127);
    float: left;
    margin-right: 10px;
}
#p2 {
    width: 50px;
    height: 50px;
    border: 1px solid black;
    background-color: rgb(58, 24, 145);
    float: left;
    margin-right: 10px;
}
#p3 {
    width: 50px;
    height: 50px;
    border: 1px solid black;
    background-color: rgb(177, 54, 45);
    float: left;
    margin-right: 10px;
}
/*Now lets try and make a two column page.*/
#p4 {
    width: 50%;
    border: 1px solid black;
    float: left;
    box-sizing: border-box;
    padding: 10px;
}
#p5 {
    width: 50%;
    border: 1px solid black;
    float: left;
    box-sizing: border-box;
    padding: 10px;
}

/*Relative and Absolute Positioning
First we set the div to relative, then can set the other elements inside it so when we move the div
everything moves with it.*/

/*Media Queries*/
@media (min-width: 1200px) {

}
/*targets large devices*/
@media (min-width: 992px) and (max-width: 1199px) {

}
/*targets medium devices.*/